/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package weekendhack;

import java.awt.Color;
import java.io.IOException;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import jssc.SerialPort;
import jssc.SerialPortException;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;

/**
 *
 * @author EsberkSafak
 */
public class OpenTheLight extends javax.swing.JFrame {

    /**
     * Creates new form OpenTheLight
     */
    public OpenTheLight() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Haftasonu Eğlencesi");

        jToggleButton1.setText("Port AÇIK");
        jToggleButton1.setToolTipText("");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jButton1.setText("Işığı AÇ");
        jButton1.setActionCommand("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("LAMBA KONTROL");

        jButton2.setText("DİNLE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jToggleButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE))
                    .addComponent(jLabel1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jToggleButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    boolean clicked=false;
    static SerialPort seri;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{ 
            if(!clicked){
            lambaYak();
        }
        else{
            lambaSondur();
        }
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    boolean enabled=true;
    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        if(enabled){
            enabled=false;
            jButton1.setEnabled(false);
            jToggleButton1.setText("Port KAPALI");
        }
        else{
            enabled=true;
            jButton1.setEnabled(true);
            jToggleButton1.setText("Port AÇIK");
          
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed
    
    boolean listen=false;
    
    int dots=0;
    boolean last;
    Timer myTimer;
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         if(listen==false){
            jButton2.setText("DİNLENİYOR");
            listen=true;
             myTimer=new Timer();
             TimerTask gorev =new TimerTask() {
                    @Override
                    public void run() {  
                        if(dots<3){
                            ++dots;
                            String text=jButton2.getText()+".";
                            jButton2.setText(text);
                        }else{
                            dots=0;
                            jButton2.setText("DİNLENİYOR");
                        }
                        try {
                            Document doc = Jsoup.connect("http://safakesberk.com/klasor/oku.php").get();
                            Boolean kontrol=Boolean.parseBoolean(doc.body().ownText());
                            System.out.println("KONTROL "+kontrol); 
                            if(kontrol)lambaYak();
                            else lambaSondur();
                        
                        } catch (Exception ex) {
                            Logger.getLogger(OpenTheLight.class.getName()).log(Level.SEVERE, null, ex);
                        }
                 
                        
                    }
 
             };
             myTimer.schedule(gorev,0,1000);
        }
         else{
             jButton2.setText("DİNLE");
             listen=false;
             myTimer.cancel();
         }
    }//GEN-LAST:event_jButton2ActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws SerialPortException, IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OpenTheLight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OpenTheLight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OpenTheLight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OpenTheLight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OpenTheLight().setVisible(true);
            }
        });
      seri=new SerialPort("COM3");  // Arduino'nun PORT u 
      seri.openPort();// Portu Aç 
      seri.setParams(9600, 8, 1,0);
      System.out.println("Port AÇILDI");
      
   
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables

    private void lambaYak() throws SerialPortException {
            seri.writeInt(1);
            jButton1.setText("Işığı KAPAT");
            clicked=true;
            
            jLabel1.setText("LAMBA AÇIK");
            jLabel1.setForeground(new Color(76,175,80));
            
            last=true;
    }

    private void lambaSondur() throws SerialPortException {
            seri.writeInt(0);
            jButton1.setText("Işığı AÇ");
            clicked=false;
            
              
            jLabel1.setText("LAMBA KAPALI");
            jLabel1.setForeground(new Color(244,67,54));
            
            last=false;
    }
}
